{"version":3,"file":"static/js/288.be620795.chunk.js","mappings":"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","sources":["components/Admin/global/Topbar.jsx","theme.js","components/Admin/global/Sidebar.jsx","pages/Admin/Pages.styled.js","pages/Admin/AdminPage.jsx","helpers/Loader/Loader.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  Paper,\r\n  ClickAwayListener,\r\n  Grow,\r\n  Popper,\r\n  MenuList,\r\n  MenuItem,\r\n} from '@mui/material';\r\nimport PersonOutlinedIcon from '@mui/icons-material/PersonOutlined';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { logOut } from '../../../redux/auth/operations';\r\n\r\nconst Topbar = () => {\r\n  const dispatch = useDispatch();\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n  const anchorRef = useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpenMenu((prev) => !prev);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n    setOpenMenu(false);\r\n  };\r\n\r\n  return (\r\n    <Box display='flex' justifyContent='end' p={2}>\r\n      <Box display='flex'>\r\n        <IconButton ref={anchorRef} onClick={handleToggle}>\r\n          <PersonOutlinedIcon />\r\n        </IconButton>\r\n\r\n        <Popper\r\n          open={openMenu}\r\n          anchorEl={anchorRef.current}\r\n          role={undefined}\r\n          placement='bottom-end'\r\n          transition\r\n          disablePortal\r\n        >\r\n          {({ TransitionProps }) => (\r\n            <Grow {...TransitionProps} style={{ transformOrigin: 'right top' }}>\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList autoFocusItem={openMenu}>\r\n                    <MenuItem component={Link} to='/change_password'>\r\n                      Змінити пароль\r\n                    </MenuItem>\r\n                    <MenuItem onClick={() => dispatch(logOut())}>Вийти</MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Topbar;\r\n","import { createContext, useState, useMemo } from \"react\";\r\nimport { createTheme } from \"@mui/material/styles\";\r\n\r\n// color design tokens\r\nexport const tokens = (mode) => ({\r\n  ...(mode === \"dark\"\r\n    ? {\r\n        grey: {\r\n          100: \"#e0e0e0\",\r\n          200: \"#c2c2c2\",\r\n          300: \"#a3a3a3\",\r\n          400: \"#858585\",\r\n          500: \"#666666\",\r\n          600: \"#525252\",\r\n          700: \"#3d3d3d\",\r\n          800: \"#292929\",\r\n          900: \"#141414\",\r\n        },\r\n        primary: {\r\n          100: \"#d0d1d5\",\r\n          200: \"#a1a4ab\",\r\n          300: \"#727681\",\r\n          400: \"#434957\",\r\n          500: \"#141b2d\",\r\n          600: \"#101624\",\r\n          700: \"#0c101b\",\r\n          800: \"#080b12\",\r\n          900: \"#040509\",\r\n        },\r\n        greenAccent: {\r\n          100: \"#dbf5ee\",\r\n          200: \"#b7ebde\",\r\n          300: \"#94e2cd\",\r\n          400: \"#70d8bd\",\r\n          500: \"#4cceac\",\r\n          600: \"#3da58a\",\r\n          700: \"#2e7c67\",\r\n          800: \"#1e5245\",\r\n          900: \"#0f2922\",\r\n        },\r\n        redAccent: {\r\n          100: \"#f8dcdb\",\r\n          200: \"#f1b9b7\",\r\n          300: \"#e99592\",\r\n          400: \"#e2726e\",\r\n          500: \"#db4f4a\",\r\n          600: \"#af3f3b\",\r\n          700: \"#832f2c\",\r\n          800: \"#58201e\",\r\n          900: \"#2c100f\",\r\n        },\r\n        blueAccent: {\r\n          100: \"#e1e2fe\",\r\n          200: \"#c3c6fd\",\r\n          300: \"#a4a9fc\",\r\n          400: \"#868dfb\",\r\n          500: \"#6870fa\",\r\n          600: \"#535ac8\",\r\n          700: \"#3e4396\",\r\n          800: \"#2a2d64\",\r\n          900: \"#151632\",\r\n        },\r\n      }\r\n    : {\r\n        grey: {\r\n          100: \"#141414\",\r\n          200: \"#292929\",\r\n          300: \"#3d3d3d\",\r\n          400: \"#525252\",\r\n          500: \"#666666\",\r\n          600: \"#858585\",\r\n          700: \"#a3a3a3\",\r\n          800: \"#c2c2c2\",\r\n          900: \"#e0e0e0\",\r\n        },\r\n        primary: {\r\n          100: \"#040509\",\r\n          200: \"#080b12\",\r\n          300: \"#0c101b\",\r\n          400: \"#f2f0f0\",\r\n          500: \"#141b2d\",\r\n          600: \"#434957\",\r\n          700: \"#727681\",\r\n          800: \"#a1a4ab\",\r\n          900: \"#d0d1d5\",\r\n        },\r\n        greenAccent: {\r\n          100: \"#0f2922\",\r\n          200: \"#1e5245\",\r\n          300: \"#2e7c67\",\r\n          400: \"#3da58a\",\r\n          500: \"#4cceac\",\r\n          600: \"#70d8bd\",\r\n          700: \"#94e2cd\",\r\n          800: \"#b7ebde\",\r\n          900: \"#dbf5ee\",\r\n        },\r\n        redAccent: {\r\n          100: \"#2c100f\",\r\n          200: \"#58201e\",\r\n          300: \"#832f2c\",\r\n          400: \"#af3f3b\",\r\n          500: \"#db4f4a\",\r\n          600: \"#e2726e\",\r\n          700: \"#e99592\",\r\n          800: \"#f1b9b7\",\r\n          900: \"#f8dcdb\",\r\n        },\r\n        blueAccent: {\r\n          100: \"#151632\",\r\n          200: \"#2a2d64\",\r\n          300: \"#3e4396\",\r\n          400: \"#535ac8\",\r\n          500: \"#6870fa\",\r\n          600: \"#868dfb\",\r\n          700: \"#a4a9fc\",\r\n          800: \"#c3c6fd\",\r\n          900: \"#e1e2fe\",\r\n        },\r\n      }),\r\n});\r\n\r\n// mui theme settings\r\nexport const themeSettings = (mode) => {\r\n  const colors = tokens(mode);\r\n  return {\r\n    palette: {\r\n      mode: mode,\r\n      ...(mode === \"dark\"\r\n        ? {\r\n            primary: {\r\n              main: colors.primary[500],\r\n            },\r\n            secondary: {\r\n              main: colors.greenAccent[500],\r\n            },\r\n            neutral: {\r\n              dark: colors.grey[700],\r\n              main: colors.grey[500],\r\n              light: colors.grey[100],\r\n            },\r\n            background: {\r\n              default: colors.primary[500],\r\n            },\r\n          }\r\n        : {\r\n            primary: {\r\n              main: colors.primary[100],\r\n            },\r\n            secondary: {\r\n              main: colors.greenAccent[500],\r\n            },\r\n            neutral: {\r\n              dark: colors.grey[700],\r\n              main: colors.grey[500],\r\n              light: colors.grey[100],\r\n            },\r\n            background: {\r\n              default: \"#fcfcfc\",\r\n            },\r\n          }),\r\n    },\r\n    typography: {\r\n      fontFamily: [\"Source Sans 3\", \"sans-serif\"].join(\",\"),\r\n      fontSize: 12,\r\n      h1: {\r\n        fontFamily: [\"Source Sans 3\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 40,\r\n      },\r\n      h2: {\r\n        fontFamily: [\"Source Sans 3\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 32,\r\n      },\r\n      h3: {\r\n        fontFamily: [\"Source Sans 3\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 24,\r\n      },\r\n      h4: {\r\n        fontFamily: [\"Source Sans 3\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 20,\r\n      },\r\n      h5: {\r\n        fontFamily: [\"Source Sans 3\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 16,\r\n      },\r\n      h6: {\r\n        fontFamily: [\"Source Sans 3\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 14,\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\n// context for color mode\r\nexport const ColorModeContext = createContext({ toggleColorMode: () => {} });\r\nexport const useMode = () => {\r\n  const [mode, setMode] = useState(\"dark\");\r\n  const colorMode = useMemo(\r\n    () => ({\r\n      toggleColorMode: () =>\r\n        setMode((prev) => (prev === \"light\" ? \"dark\" : \"light\")),\r\n    }),\r\n    []\r\n  );\r\n  const theme = useMemo(() => createTheme(themeSettings(mode)), [mode]);\r\n  return [theme, colorMode];\r\n};","import { useState } from 'react';\r\nimport { ProSidebar, Menu, MenuItem } from 'react-pro-sidebar';\r\nimport { Box, IconButton, Typography, useTheme } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport HomeOutlinedIcon from '@mui/icons-material/HomeOutlined';\r\nimport PeopleOutlinedIcon from '@mui/icons-material/PeopleOutlined';\r\nimport ContactsOutlinedIcon from '@mui/icons-material/ContactsOutlined';\r\nimport ReceiptOutlinedIcon from '@mui/icons-material/ReceiptOutlined';\r\nimport MenuOutlinedIcon from '@mui/icons-material/MenuOutlined';\r\nimport BallotOutlined from '@mui/icons-material/BallotOutlined';\r\nimport PlaylistAddOutlined from '@mui/icons-material/PlaylistAddOutlined';\r\nimport { tokens } from 'theme';\r\nimport default_user_img from '../../../images/defaultUserPhoto.jpg';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getUser } from '../../../redux/auth/selectors';\r\n// import { getUser, getUserAvatar } from \"../../../redux/auth/selectors\";\r\n\r\nconst Item = ({ title, to, icon, selected, setSelected, className }) => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  return (\r\n    <MenuItem\r\n      active={selected === title}\r\n      style={{\r\n        color: colors.grey[100],\r\n      }}\r\n      onClick={() => setSelected(title)}\r\n      icon={icon}\r\n    >\r\n      <Typography className={className}>{title}</Typography>\r\n      <Link to={to} />\r\n    </MenuItem>\r\n  );\r\n};\r\n\r\nconst Sidebar = () => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  const [isCollapsed, setIsCollapsed] = useState(false);\r\n  const [selected, setSelected] = useState('Dashboard');\r\n  const user = useSelector(getUser);\r\n  // const userAvatar = useSelector(getUserAvatar);\r\n  let avatar;\r\n  // if (userAvatar !== '' && userAvatar !== undefined) {\r\n  // avatar =\r\n  // \"https://event-shop-backend.vercel.app/uploads/avatars/\" + userAvatar.split('/')[userAvatar.split('/').length - 1];\r\n  // }\r\n  return (\r\n    <Box\r\n      sx={{\r\n        '& .pro-sidebar-inner': {\r\n          background: `${colors.primary[400]} !important`,\r\n        },\r\n        '& .pro-icon-wrapper': {\r\n          backgroundColor: 'transparent !important',\r\n        },\r\n        '& .pro-inner-item': {\r\n          padding: '5px 35px 5px 20px !important',\r\n        },\r\n        '& .pro-inner-item:hover': {\r\n          color: '#868dfb !important',\r\n        },\r\n        '& .pro-menu-item.active': {\r\n          color: '#6870fa !important',\r\n        },\r\n      }}\r\n    >\r\n      <ProSidebar collapsed={isCollapsed}>\r\n        <Menu iconShape='square'>\r\n          {/* LOGO AND MENU ICON */}\r\n          <MenuItem\r\n            onClick={() => setIsCollapsed(!isCollapsed)}\r\n            icon={isCollapsed ? <MenuOutlinedIcon /> : undefined}\r\n            style={{\r\n              margin: '10px 0 20px 0',\r\n              color: colors.grey[100],\r\n            }}\r\n          >\r\n            {!isCollapsed && (\r\n              <Box display='flex' justifyContent='space-between' alignItems='center' ml='15px'>\r\n                <Typography variant='h4' color={colors.grey[100]} textTransform={'capitalize'}>\r\n                  {user.role}\r\n                </Typography>\r\n                <IconButton onClick={() => setIsCollapsed(!isCollapsed)}>\r\n                  <MenuOutlinedIcon />\r\n                </IconButton>\r\n              </Box>\r\n            )}\r\n          </MenuItem>\r\n\r\n          {!isCollapsed && (\r\n            <Box mb='25px'>\r\n              <Box display='flex' justifyContent='center' alignItems='center'>\r\n                <img\r\n                  alt='profile-user'\r\n                  width='100px'\r\n                  height='100px'\r\n                  src={avatar ? avatar : default_user_img}\r\n                  style={{ cursor: 'pointer', borderRadius: '50%' }}\r\n                />\r\n              </Box>\r\n              <Box textAlign='center'>\r\n                <Typography\r\n                  variant='h4'\r\n                  color={colors.grey[100]}\r\n                  fontWeight='bold'\r\n                  sx={{ m: '10px 0 0 0' }}\r\n                  textTransform={'uppercase'}\r\n                >\r\n                  {user.name}\r\n                </Typography>\r\n                <Typography\r\n                  variant='h5'\r\n                  color={colors.greenAccent[500]}\r\n                  textTransform={'uppercase'}\r\n                >\r\n                  {user.role}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n\r\n          <Box paddingLeft={isCollapsed ? undefined : '10%'}>\r\n            <Item\r\n              title='Залишки по рахункам'\r\n              to='account_balances'\r\n              icon={<HomeOutlinedIcon />}\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n              className='account_balances'\r\n            />\r\n\r\n            <Typography variant='h6' color={colors.grey[300]} sx={{ m: '15px 0 5px 20px' }}>\r\n              Data\r\n            </Typography>\r\n            <Item\r\n              title='Manage Team'\r\n              to='specialists'\r\n              icon={<PeopleOutlinedIcon />}\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n              className='specialists'\r\n            />\r\n            <Item\r\n              title='Manage Category'\r\n              to='categories'\r\n              icon={<BallotOutlined />}\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n              className='categories'\r\n            />\r\n            <Item\r\n              title='Events Information'\r\n              to='events'\r\n              icon={<ContactsOutlinedIcon />}\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n              className='events'\r\n            />\r\n            <Item\r\n              title='Activate event'\r\n              to='activate_events'\r\n              icon={<PlaylistAddOutlined />}\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n              className='activate_events'\r\n            />\r\n            <Item\r\n              title='Orders'\r\n              to='orders'\r\n              icon={<ReceiptOutlinedIcon />}\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n              className='orders'\r\n            />\r\n          </Box>\r\n        </Menu>\r\n      </ProSidebar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n\r\nItem.propTypes = {\r\n  title: PropTypes.any.isRequired,\r\n  className: PropTypes.any,\r\n  to: PropTypes.any.isRequired,\r\n  icon: PropTypes.any.isRequired,\r\n  selected: PropTypes.any.isRequired,\r\n  setSelected: PropTypes.any.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const AdminContainer = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\nwidth: 100%;\r\njustify-content: start;\r\nalign-items: start;\r\n`","import { Outlet } from 'react-router-dom';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { SEO } from 'utils/SEO';\r\n// import { fetchData } from 'services/APIservice';\r\n// import { useDispatch } from 'react-redux';\r\nimport Topbar from 'components/Admin/global/Topbar';\r\nimport Sidebar from 'components/Admin/global/Sidebar';\r\nimport { AdminContainer } from './Pages.styled';\r\nimport { onLoaded, onLoading } from 'helpers/Loader/Loader';\r\nimport { onFetchError } from 'helpers/Messages/NotifyMessages';\r\n// import { getCategory } from '../../redux/category/operation';\r\n// import { getSpecialists } from '../../redux/specialists/operation';\r\n// import { getEvents } from '../../redux/events/operation';\r\n// import { getActiveEvents } from '../../redux/activate_events/operation';\r\n// import { getOrders } from '../../redux/orders/operation';\r\n// import { getMessages } from '../../redux/messages/operation';\r\n\r\nconst AdminPage = () => {\r\n  //   const [category, setCategory] = useState([]);\r\n  //   const [specialists, setSpecialists] = useState([]);\r\n  //   const [events, setEvents] = useState([]);\r\n  //   const [active_events, setActive_events] = useState([]);\r\n  //   const [orders, setOrders] = useState([]);\r\n  //   const [messages, setMessages] = useState([]);\r\n  const [isLoading] = useState(false);\r\n  const [error] = useState(null);\r\n  //   const dispatch = useDispatch();\r\n\r\n  //   useEffect(() => {\r\n  //     (async function getData() {\r\n  //       setIsLoading(true);\r\n  //       try {\r\n  //         const { data } = await fetchData(`/categories`);\r\n  //         dispatch(getCategory({ ...data }));\r\n  //         if (!data) {\r\n  //           return onFetchError('Whoops, something went wrong');\r\n  //         }\r\n  //         setCategory(data);\r\n  //       } catch (error) {\r\n  //         setError(error);\r\n  //       } finally {\r\n  //         setIsLoading(false);\r\n  //       }\r\n  //     })();\r\n  //   }, []);\r\n\r\n  //   useEffect(() => {\r\n  //     (async function getData() {\r\n  //       setIsLoading(true);\r\n  //       try {\r\n  //         const { data } = await fetchData(`/specialists`);\r\n  //         dispatch(getSpecialists({ ...data }));\r\n  //         if (!data) {\r\n  //           return onFetchError('Whoops, something went wrong');\r\n  //         }\r\n  //         setSpecialists(data);\r\n  //       } catch (error) {\r\n  //         setError(error);\r\n  //       } finally {\r\n  //         setIsLoading(false);\r\n  //       }\r\n  //     })();\r\n  //   }, []);\r\n\r\n  //   useEffect(() => {\r\n  //     (async function getData() {\r\n  //       setIsLoading(true);\r\n  //       try {\r\n  //         const { data } = await fetchData(`/events`);\r\n  //         dispatch(getEvents({ ...data }));\r\n  //         if (!data) {\r\n  //           return onFetchError('Whoops, something went wrong');\r\n  //         }\r\n  //         setEvents(data);\r\n  //       } catch (error) {\r\n  //         setError(error);\r\n  //       } finally {\r\n  //         setIsLoading(false);\r\n  //       }\r\n  //     })();\r\n  //   }, []);\r\n\r\n  //   useEffect(() => {\r\n  //     (async function getData() {\r\n  //       setIsLoading(true);\r\n  //       try {\r\n  //         const { data } = await fetchData(`/active_events`);\r\n  //         dispatch(getActiveEvents({ ...data }));\r\n  //         if (!data) {\r\n  //           return onFetchError('Whoops, something went wrong');\r\n  //         }\r\n  //         setActive_events(data);\r\n  //       } catch (error) {\r\n  //         setError(error);\r\n  //       } finally {\r\n  //         setIsLoading(false);\r\n  //       }\r\n  //       setTimeout(()=>getData(), 60000)\r\n  //     })();\r\n  //   }, []);\r\n\r\n  //   useEffect(() => {\r\n  //     (async function getData() {\r\n  //       setIsLoading(true);\r\n  //       try {\r\n  //         const { data } = await fetchData(`/orders`);\r\n  //         dispatch(getOrders({ ...data }));\r\n  //         if (!data) {\r\n  //           return onFetchError('Whoops, something went wrong');\r\n  //         }\r\n  //         setOrders(data);\r\n  //       } catch (error) {\r\n  //         setError(error);\r\n  //       } finally {\r\n  //         setIsLoading(false);\r\n  //       }\r\n  //       setTimeout(()=>getData(), 60000)\r\n  //     })();\r\n  //   }, []);\r\n\r\n  //   useEffect(() => {\r\n  //     (async function getData() {\r\n  //       setIsLoading(true);\r\n  //       try {\r\n  //         const { data } = await fetchData(`/messages`);\r\n  //         dispatch(getMessages({ ...data }));\r\n  //         if (!data) {\r\n  //           return onFetchError('Whoops, something went wrong');\r\n  //         }\r\n  //         setMessages(data);\r\n  //       } catch (error) {\r\n  //         setError(error);\r\n  //       } finally {\r\n  //         setIsLoading(false);\r\n  //         setTimeout(()=>getData(), 60000)\r\n  //       }\r\n  //     })();\r\n  //   }, []);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <SEO title='Administration' description='Page Administration' />\r\n      {isLoading ? onLoading() : onLoaded()}\r\n      {error && onFetchError('Whoops, something went wrong')}\r\n      <Topbar />\r\n      <AdminContainer>\r\n        <Sidebar />\r\n        <Outlet />\r\n      </AdminContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n","import { Loading } from 'notiflix/build/notiflix-loading-aio';\r\nconst onLoading = () => {\r\n  return Loading.circle('Loading...', {\r\n    backgroundColor: 'transparent',\r\n    svgSize: '160px',\r\n    svgColor: `${props => props.theme.white_fon}`,\r\n    messageFontSize: '20px',\r\n  });\r\n};\r\n\r\nconst onLoaded = () => {\r\n  return Loading.remove();\r\n};\r\n\r\nexport { onLoading, onLoaded };"],"names":["Topbar","dispatch","useDispatch","openMenu","setOpenMenu","useState","anchorRef","useRef","handleClose","event","current","contains","target","_jsx","Box","display","justifyContent","p","children","_jsxs","IconButton","ref","onClick","handleToggle","prev","PersonOutlinedIcon","Popper","open","anchorEl","role","undefined","placement","transition","disablePortal","_ref","TransitionProps","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","MenuItem","component","Link","to","logOut","tokens","mode","grey","primary","greenAccent","redAccent","blueAccent","Item","title","icon","selected","setSelected","className","theme","useTheme","colors","palette","active","color","Typography","Sidebar","isCollapsed","setIsCollapsed","user","useSelector","getUser","sx","background","backgroundColor","padding","ProSidebar","collapsed","Menu","iconShape","MenuOutlinedIcon","margin","alignItems","ml","variant","textTransform","mb","alt","width","height","src","cursor","borderRadius","textAlign","fontWeight","m","name","paddingLeft","HomeOutlinedIcon","PeopleOutlinedIcon","BallotOutlined","ContactsOutlinedIcon","PlaylistAddOutlined","ReceiptOutlinedIcon","AdminContainer","styled","div","AdminPage","isLoading","error","useEffect","window","scrollTo","top","left","behavior","_Fragment","SEO","description","Loading","circle","svgSize","svgColor","props","white_fon","messageFontSize","remove","onFetchError","Outlet"],"sourceRoot":""}